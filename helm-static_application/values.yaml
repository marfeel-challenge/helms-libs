# Default values for helm-static_application.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: holis


replicaCount: 1
#deployment:
#  progressDeadlineSeconds: 600
#  strategy:
#    rollingUpdate:
#      maxSurge: 25%
#      maxUnavailable: 25%
#    type: RollingUpdate

image:
  repository: quay.io/santalucia/test
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev-latest"
  port:
    name: "http"
    containerPort: "8080"
    protocol: "TCP"

commonlabels:
  commonlabels: "commonlabels"

deploymentlabels:
  deploylabel: "deploylabel"

imagePullSecrets:
  - name: "santalucia-cicd-pull-secret"

livenessProbe:
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10
  failureThreshold: 10
  initialDelaySeconds: 10
  httpGet:
    path: /hello
    port: 8080

readinessProbe:
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10
  failureThreshold: 3
  initialDelaySeconds: 30
  httpGet:
    path: /hello
    port: 8080

    #imagePullSecrets: []
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: "LoadBalancer"
  port: 8080
  targetPort: 8080
  protocol: "TCP"
  name: "http"

#  - port: 8081
#    targetPort: 8081
#    protocol: "TCP"
#    name: "http-8081"

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

route:
  enabled: false
  hosts:
    - weight: 100
      host: aplicacion.dev.nopro.ocp.santalucia.net
      targetPort: 8080
      wildcardPolicy: "None"
      tls:
        termination: "edge"
        insecureEdgeTerminationPolicy: "Redirect"
    - weight: 100
      host: aplicacion2.dev.nopro.ocp.santalucia.net
      targetPort: 8080
      wildcardPolicy: "None"
      tls:
        termination: "edge"
        insecureEdgeTerminationPolicy: "Redirect"


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

servicemonitor:
  enabled: false
  labels:
    servicemonitor: "servicemonitor"
  endpoints:
    interval: 30s
    port: web
    scheme: http
    path: /metrics
#  selector:
#    matchLabels:
#      app: prometheus-example-app
#
